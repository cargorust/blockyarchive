language: rust
services: docker
sudo: required
dist: xenial

branches:
  except:
    - dev

env:
  global:
  - RUSTFLAGS="-C link-dead-code"
  - CRATE_NAME=blkar

matrix:
  include:
    # Linux
    - env: TARGET=aarch64-unknown-linux-gnu
    # - env: TARGET=arm-unknown-linux-gnueabi
    # - env: TARGET=armv7-unknown-linux-gnueabihf
    - env: TARGET=i686-unknown-linux-gnu
    - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    # - env: TARGET=i686-apple-darwin
    #   os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    # - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    # - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1

    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: beta
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - travis_wait 30 bash ci/script.sh
  - rm -rf target/cov
  - bash install_kcov.sh
  - bash tests/dev_tests.sh
  - bash cov.sh

addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev

after_success:
  - bash kcov_upload_reports.sh

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: "KY8/VQDvqrlMo+KcOGzMpXpoi8I3laQJRwQZHZs3hUGFqwjjTHVpa9LOMIMcmNUzNUKszNghakewcd7+uMDi92u+m9Jg30ptBl3rm7szKxgAQuGvisu6Xd1RJdiJlql+hAbcNTLuX+5TG+/a5WLGcP/IT5t48QaEVpMJbtAyYm2qxWhZzgwB56nibHNyi0DMDWviNdiLVMkgB7wnPx5O+DiITg+1go+mM2Er6Di06SBCoK94reC852UtCWorirxujwcWIYmZzqZZZR1LaNH0l7RwBkBw6bHL43VvsiVcTW3UhQRJ0pSqgQdaqh+z2ZhZj0LmnVDewVfvxMfBUAMOoQi5+0o+4EMnMbcRyRwTC/AaQrCfVSliuk8ljI4canF9M5KSoz0Xj8yvLKJGpm6z65VlRQrtC/C6k1VBzahJ4w4mznEFxIz99rRjuXyDRexwtKagZWu/h07NiBaOLXaUPymTnnBxWartugDP3xo3fZoTtUNmNj3HtRz1y3H6Aqb7hdvaV+ALTguKGjS5tsEpzYBp1YzRLDHvQkVEhZaWZvN0oTdHXm6CP2nqfh1W420n3l9k49jqorCBlXLTdRcMFM2tMlSy3yW5Q0fiA8EwKYDW1IvjlphiQdrJhxxvKATxiUPnUF0NalrAIUlVN9/ETx9iKZG4RE52MuYYWq96q5Y="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo
  - rm -rfv target/cov/
  - rm -rfv target/{debug,release}/blkar
  - rm -rfv target/{debug,release}/{blkar,blkar_lib,libblkar_lib}.d
  - rm -rfv target/{debug,release}/build/{blkar,blkar_lib,libblkar_lib}-*
  - rm -rfv target/{debug,release}/deps/{blkar,blkar_lib,libblkar_lib}-*
  - rm -rfv target/{debug,release}/incremental/{blkar,blkar_lib,libblkar_lib}-*
  - rm -rfv target/{debug,release}/.fingerprint/{blkar,blkar_lib,libblkar_lib}-*
  - cargo clean -p blkar

notifications:
  email:
    on_success: never
