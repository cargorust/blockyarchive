language: rust
services: docker
sudo: required
dist: xenial

branches:
  except:
    - dev

env:
  global:
  - RUSTFLAGS="-C link-dead-code"
  - CRATE_NAME=blkar

matrix:
  include:
    # Linux
    - env: TARGET=aarch64-unknown-linux-gnu
    - env: TARGET=arm-unknown-linux-gnueabi
    - env: TARGET=armv7-unknown-linux-gnueabihf
    - env: TARGET=i686-unknown-linux-gnu
    - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    # - env: TARGET=i686-apple-darwin
    #   os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1

    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: beta
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh
  - rm -rf target/cov
  - bash install_kcov.sh
  - bash cov.sh
  - bash tests/dev_tests.sh
  - bash cov_tests/dev_tests.sh

addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev

after_success:
  - bash kcov_upload_reports.sh

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: "rf3oO2G9MRha647uGErLfqye8S1vNJiLS/bmJg0e5UYFuQd35iLNJqOF4HKZQ6fFlcljCmSgK18leHWmKbARCJrPgQg3INzTIPEuuWQ8x599gqH/2893vvknk344/TlSEhkCuqdSGFggpTtcIvGZalnrSh0SnoQddN0dL6Nwb7GZwbkXrvU0DARuh0602SLfQaVbuIlMDriVJhkhmKCFlaUQZWv+gMJGC1Fzl0EZPsPamyNQojc+BkGzVuY/bJRazcq2uovS05JjWiBQACC7NAmKT9/fZlA7vzPhHwdp5kJgcSS3gYFcD/3zmknRo8Z1ri1W6F3f/5JI1b8zkEXsdPaIgH3A4Esj2h1A87wlZWOALpohN/Wvw+egovRqWE1KaaIxSaeYeQ86UmG/I1zSFPtiYfkwbMquad7wmF/3gtMsC3l8Qwo8+Qu6ujAYoK3cZ2VMwr7cIF/BWikHTR4IlrlcqIBnBOFq4hbMS4dNayn77OTb1FUCknyK6gv/+uqf1+jLtW8uFFYdQgUbv4UGAijVpoh6qlcS28U0KWfckHcf0s1mAu/QgMHIOqdeCLBK8SHvns8vaBWT2KctVzJ34Vlp9qxcjmuu+ecjJCBN3NPBaIfmiUi9snmMqFhp2aRjWSbiMlZ+qqUopTy+TToxAYLBGUENAWWJsbtKB3/4rOg="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

notifications:
  email:
    on_success: never
